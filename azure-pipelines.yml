pool:
  vmImage: 'ubuntu-latest'

variables:
  azureServiceConnection: 'Visual Studio Enterprise with MSDN(345d42b9-5ca1-4189-a6d8-a8c32fe22d98)'
  subscriptionId: '345d42b9-5ca1-4189-a6d8-a8c32fe22d98'
  resourceGroupName: 'deploymentTest'
  resourceGroupLocation: 'UKSouth'
  location: 'UKSouth'
  appServicePlanName: 'myAppServicePlan111'
  functionApp1Name: 'testFunctionApp1-xyz123'
  functionApp2Name: 'testFunctionApp2-xyz123'
  serviceBusNamespaceName: 'testServiceBusNamespace-xyz123'
  appInsightsName: 'myAppInsights'
  keyVaultName: 'testKeyVault-xyz1233'
  storageAccountName: 'mystorageaccountjj3424'
  aksClusterName: 'myAKSCluster'
  grafanaNamespace: 'grafana'
  redisNamespace: 'redis'


steps:
  - task: Bash@3
    displayName: 'Generate SSH Key Pair'
    inputs:
      targetType: 'inline'
      script: |
        # Generate SSH key pair
        ssh-keygen -t rsa -b 4096 -f id_rsa -N "" -C "azure-pipeline"
        
        echo "##vso[task.setvariable variable=sshPublicKey]$(cat id_rsa.pub)"

  - task: AzureCLI@2
    displayName: 'Create Resource Group'
    inputs:
      azureSubscription: $(azureServiceConnection)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        # Create the resource group using Bicep
        az deployment sub create --location $(resourceGroupLocation) --template-file group.bicep --parameters resourceGroupName=$(resourceGroupName) resourceGroupLocation=$(resourceGroupLocation)

  - task: AzureCLI@2
    displayName: 'Deploy Bicep Template'
    inputs:
      azureSubscription: $(azureServiceConnection)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        # Deploy the Bicep template with the generated SSH public key
        az deployment group create --resource-group $(resourceGroupName) --template-file main.bicep --parameters sshPublicKey="$(sshPublicKey)"
  - task: HelmInstaller@1
    displayName: 'Install Helm'
    inputs:
      helmVersion: 'latest'

  - task: AzureCLI@2
    displayName: 'Configure kubectl'
    inputs:
      azureSubscription: $(azureServiceConnection)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        # Get AKS credentials
        az aks get-credentials --resource-group $(resourceGroupName) --name $(aksClusterName) --overwrite-existing

  - task: AzureCLI@2
    displayName: 'Create Namespace for Grafana'
    inputs:
      azureSubscription: $(azureServiceConnection)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        # Create namespace for Grafana
        kubectl create namespace $(grafanaNamespace) || true
        kubectl create namespace $(redisNamespace) || true

  - task: AzureCLI@2
    displayName: 'Add Helm Repositories'
    inputs:
      azureSubscription: $(azureServiceConnection)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        # Add Helm repositories
        helm repo add grafana https://grafana.github.io/helm-charts
        helm repo update

  - task: AzureCLI@2
    displayName: 'Install Grafana'
    inputs:
      azureSubscription: $(azureServiceConnection)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        # Install Grafana using Helm
        helm install grafana grafana/grafana --namespace $(grafanaNamespace) --set adminPassword=admin --set service.type=LoadBalancer --set service.port=3000

  - task: AzureCLI@2
    displayName: 'Output Grafana Admin Password'
    inputs:
      azureSubscription: $(azureServiceConnection)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        # Output Grafana admin password
        echo "Grafana Admin Password: admin"

  - task: AzureCLI@2
    displayName: 'Deploy Redis Service'
    inputs:
      azureSubscription: $(azureServiceConnection)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        kubectl apply -f redis-service.yaml --namespace $(redisNamespace)

  - task: AzureCLI@2
    displayName: 'Output Grafana and Redis Passwords'
    inputs:
      azureSubscription: $(azureServiceConnection)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        echo "Grafana Admin Password: admin"